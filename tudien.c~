#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "BST.h"
#include <ctype.h>
void menuf(){
  printf("\n\t--------------------MENU------------------\n");
  printf("\t\t\t  1.Doc du lieu tu file vao vay.\n");
  printf("\t\t\t  2.In cay.\n");
  printf("\t\t\t  3.Dich.\n");
  printf("\t\t\t  4.Ghi file.\n");
  printf("\t\t\t  5.Quit.\n");
}

void ReadText(FILE *fin,ElementType *element,TreeType *T){
  char c;
  int j=0;
  while(!feof(fin)){
    fscanf(fin,"%s",element[j].tu);
    fgetc(fin);
    fgets(element[j].nghia,20,fin);
    element[j].nghia[strlen(element[j].nghia)-1]='\0';
    j++;
  }
  for(int i=0;i<j;i++)
    InsertNode(element[i],T);
}

void totext(FILE *fout,TreeType T){
  if(T!=NULL)
    {
      totext(fout,T->left);
      fprintf(fout,"%-20s %-50s\n",T->element.tu,T->element.nghia);
      totext(fout,T->right);
    }
}
//void dich(char cau1,

int main(){
   FILE *fin,*fout;
  int i,j,n,menu;
  ElementType element[50],tach[50];
  TreeType T;
  MakeNullTree(&T);
  do{
    menuf();
    printf("Chon menu: ");scanf("%d",&menu);
    switch(menu){
    case 1:
      {
	if((fin=fopen("tudien.txt","r"))==NULL){
	  printf("Cannot open file!\n");
	  return 1;
	}
	ReadText(fin,element,&T);
	fclose(fin);
	break;
      }
    case 2:
      {
	inorderprint(T);
	break;
      }
    case 3:
      {
	char cau[100],cau1[100],s1[50][10],*p;
	int dem=0;
	printf("Nhap vao 1 cau tieng anh: ");__fpurge(stdin);gets(cau1);

	for(int i=0;i<strlen(cau1);i++){
	  if(isupper(cau1[i])) cau1[i]=tolower(cau1[i]);
	  }
	p=strtok(cau1," ");
	while(p!='\0'){
	      strcpy(s1[dem],p);
	      dem++;
	      p=strtok(NULL," ");
	    }
	for(int i=0;i<dem;i++)
		printf("%s\n",s1[i]);
	TreeType pr;
	for(int i=0;i<dem;i++){
	  //pr=NULL;
	  pr=Search(s1[i],T);
	  if(pr==NULL){
	    printf("Tu chua co trong tu dien\nNhap bo sung: ");ElementType a[1];gets(a[0].nghia);
	    strcpy(a[0].tu,s1[i]);
	      InsertNode(a[0],&T);
	  }
	}
        TreeType q;q=NULL;
	for(int i=0;i<dem;i++){
	  q=Search(s1[i],T);
	  printf("%s ",q->element.nghia);
	}
	printf("\n");
	break;
      }
    case 4:
      {
	if((fout=fopen("tudien_update.txt","w"))==NULL){
	  printf("Cannot open file!\n");
	  return 1;
	}
	totext(fout,T);
	fclose(fout);
	break;
      }
    case 5:
      {
	freetree(T);
	break;
      }
    }
    }while(menu>0&&menu<5);
  return 0;
}
